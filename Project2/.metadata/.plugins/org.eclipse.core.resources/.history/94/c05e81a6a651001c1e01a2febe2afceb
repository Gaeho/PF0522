package com.oracle.s20210904.dj.controller;

import java.io.File;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartFile;

public class DjUploadController {
	
	private static final Logger logger = LoggerFactory.getLogger(DjAnnoWriteController.class);
	
	//업로드
		@RequestMapping(value="uploadForm", method=RequestMethod.POST)
		public String uploadForm(HttpServletRequest request, MultipartFile pictureofcomp, Model model) 
		throws Exception{
			String uploadPath = request.getSession().getServletContext().getRealPath("/upload/");
			//업로드 경로를 만든다. 메타데이터 아래에 경로를 둔다. 가장 아래에 upload라는 폴더를 만들고 거기에 파일을 둔다.
			
			System.out.println("uploadForm 시작되었습니다.");
			logger.info("originalName: "+pictureofcomp.getOriginalFilename());//사진의 원래 이름을 보여준다
			
			logger.info("size: " + pictureofcomp.getSize());//사진의 용량
			logger.info("contentType: " + pictureofcomp.getContentType());//사진의 타입
			logger.info("uploadPath: " + uploadPath); //업로드 경로
											
			String savedName = uploadFile(pictureofcomp.getOriginalFilename(),pictureofcomp.getBytes(),uploadPath);
			logger.info("savedName: "+savedName);
			
			model.addAttribute("savedName", savedName);
			return "uploadResult";
		}	
	
		//uploadForm에서 호출하는 메소드이다.
		private String uploadFile(String originalName, byte[] fileData, String uploadPath) 
		throws Exception{
			UUID uid = UUID.randomUUID();
			
			System.out.println("uploadPath->"+uploadPath);
			
			File fileDirectory = new File(uploadPath);
			if(!fileDirectory.exists()) { //만약 파일디렉토리가 존재하지 않는다면,
				fileDirectory.mkdirs(); // mkdirs=make directory 폴더를 만들어라
				System.out.println("업로드용 폴더 생성 : "+ uploadPath);
			}
			
			String savedName = uid.toString() + "_" + originalName;
			//uid를 String화 해서 원래 이름과 잇는다
			
			logger.info("UUID savedName: "+ savedName);
			File target = new File(uploadPath, savedName); //경로와 이름을 가지고 새로운 File 인스턴스 생성/생성만 했다.
			FileCopyUtils.copy(fileData, target); //org.springframework.util.FileCopyUtils
			// 파일 데이터, 경로, 이름을 복사한다. 그래서 올린다. 인스턴스를 저장한다.

			return savedName;//이름을 리턴한다.
		}
		
		
	

}
